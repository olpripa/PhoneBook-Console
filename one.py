# для обробки даних від користувача ми будемо використовувати
# наступний формат строки <command> <name>, <phone>
# команда іде першим словом а далі після пробелу будуть наши дани які ми разокремемо комою

# спочатку отримаємо рядок, потім приберемо усі пробели з початку та кінця методом strip()
# якщо ми не зробимо так, випадковий пробел на початку не дасть змоги правильно отримати значення команди
# далі отриманий рядок сплітуємо по пробелу split(' ') який зустрінеться першим  завдяки додатковому параметру
# скільки разів потрібно строку розбити по зазначеному значенню для сплітування (в нашому випадку це пробіл ' ')
# якщо ми зробемо так split(' ', 2) то строка буде розбита по пробелу не більше двух разів
# Приклади для строки "mama papa love sun smile"
# split(' ')   => ['mama', 'papa', 'love', 'sun', 'smile']
# split(' ', 1)=> ['mama', 'papa love sun smile']
# split(' ', 2)=> ['mama', 'papa', 'love sun smile']
# split(' ', 3)=> ['mama', 'papa', 'love', 'sun smile']
# split(' ', 4)=> ['mama', 'papa', 'love', 'sun', 'smile']

# приклад рядка який користувач вводитеме add Jon Born, 345 668 900
# але якщо користувач введе команду без додаткових даних data ми отримаємо помилку
# тому позначемо data як можливе значення *data,
# та у такому разі якщо користувач введе лише команду data буде мати значення порожній список
# в інших випадках data буте списком з одного елементу
# (тобто спліт додасть до data все що буде містится після пробелу)


command, *data = input().strip().split(' ', 1)

# після обробки строки add Jon Born, 345 668 900
# значення command є  строка"add"
# а значення data є список з одного елементу ["Jon Born, 345 668 900"]

# після обробки строки show Jon Born
# значення command є строка "show"
# а значення data є список з одного елементу ["Jon Born"]

# так как data може бути або порожнім списком або містить дані, нам потрібно це врахувати
if data:
    # якшо там э строка ми розакремемо дані за комою
    # та замінемо старе значення ["Jon Born, 345 668 900"] на отримане після спліту за комою ["Jon Born", "345 668 900" ]

    # та замінемо старе значення ["Jon Born"] на отримане після спліту за комою ["Jon Born"]
    # (значення не змінилось, так как коми не має, тобто нема чого сплітувати)

    # тобто нове значення data може бути списком з одного елементу - лише ім'я або з двох ім'я та телефон
    data = data[0].split(',')
